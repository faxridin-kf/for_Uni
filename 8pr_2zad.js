// Простая программа на javascript для представления связанного списка
console.log('Кучкаров Фахридин группа 618-21')
console.log('Пусть имеется односвязный список действительных чисел, каждый элемент которого содержит дополнительное (нереализованное) ссылочное поле prev. Преобразовать исходный односвязный список в двусвязный, в котором каждый элемент связан не только с последующим элементом (с помощью поля next), но и с предыдущим (с помощью поля prev).')
var head; // глава списка
  
/* Узел связанного списка.  Этот внутренний класс создан так, что
main() может получить к нему доступ */
 class Node {
    constructor(d)
    {
        this.data = d;
        this.next = null;
    } // Конструктор
}

/* способ создания простого связанного списка с 3 узлами*/
  

    var head = new Node(1);
    var second = new Node(2);
    var third = new Node(3);

    /* Три узла были распределены динамически.
      У нас есть ссылки на эти три блока как на главный,
второй и третий

      llist.head        second              third
         |                |                  |
         |                |                  |
     +----+------+     +----+------+     +----+------+
     | 1  | null |     | 2  | null |     |  3 | null |
     +----+------+     +----+------+     +----+------+ */

    head.next = second; // Связать первый узел со вторым узлом

    /* Теперь следующий из первого узла ссылается на второй.  Таким образом, они
оба связаны.

     llist.head        second              third
        |                |                  |
        |                |                  |
    +----+------+     +----+------+     +----+------+
    | 1  |  o-------->| 2  | null |     |  3 | null |
    +----+------+     +----+------+     +----+------+ */

    second.next = third; // Связать второй узел с третьим узлом

    /* Теперь следующий из второго узла относится к третьему.  Итак, все три
        узлы связаны.

     llist.head        second              third
        |                |                  |
        |                |                  |
    +----+------+     +----+------+     +----+------+
    | 1  |  o-------->| 2  |  o-------->|  3 | null |
    +----+------+     +----+------+     +----+------+ */

